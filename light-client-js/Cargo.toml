[package]
name        = "cometbft-light-client-js"
version     = "0.1.0-alpha.1"
authors     = ["Informal Systems <hello@informal.systems>"]
edition     = "2021"
license     = "Apache-2.0"
readme      = "README.md"
keywords    = ["blockchain", "bft", "consensus", "light-client", "cometbft", "tendermint"]
categories  = ["cryptography::cryptocurrencies", "network-programming"]
repository  = "https://github.com/cometbft/cometbft-rs"
description = """
    cometbft-light-client-js provides a lightweight, WASM-based interface to
    the CometBFT Light Client's verification functionality.
    """

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
serde = { version = "1.0", default-features = false, features = [ "derive" ] }
serde_json = { version = "1.0", default-features = false }
cometbft = { version = "0.1.0-alpha.1", default-features = false, path = "../cometbft" }
cometbft-light-client-verifier = { version = "0.1.0-alpha.1", features = ["rust-crypto"], default-features = false, path = "../light-client-verifier" }
wasm-bindgen = { version = "0.2.63", default-features = false, features = [ "serde-serialize" ] }
serde-wasm-bindgen = { version = "0.4.5", default-features = false }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", default-features = false, optional = true }

[dev-dependencies]
wasm-bindgen-test = { version = "0.3.13", default-features = false }
